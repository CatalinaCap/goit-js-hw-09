{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAGPO,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAAAC,GACzDA,EAAMC,iBAQN,IANA,IAAMC,EAAaL,SAASC,cAAc,uBAAuBK,MAC3DC,EAAYP,SAASC,cAAc,sBAAsBK,MACzDE,EAAcR,SAASC,cAAc,wBAAwBK,MAC/DG,EAAQC,OAAOL,GACbM,EAAOD,OAAOH,GACdK,EAASF,OAAOF,GACbK,EAAI,EAAGA,GAAKD,EAAQC,IAC3BtB,EAAcsB,EAAGJ,GACdK,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAGjD2B,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAA3B,GAAS4B,OAAOI,QACd,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAIjDgB,GAASE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        //Fulfill\n        resolve({ position, delay });\n      } else {\n        //Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\ndocument.querySelector('.form').addEventListener('submit', event => {\n  event.preventDefault();\n\n  const delayInput = document.querySelector('input[name=\"delay\"]').value;\n  const stepInput = document.querySelector('input[name=\"step\"]').value;\n  const amountInput = document.querySelector('input[name=\"amount\"]').value;\n  let delay = Number(delayInput);\n  const step = Number(stepInput);\n  const amount = Number(amountInput);\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delay += step;\n  }\n});\n"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","delayInput","value","stepInput","amountInput","delay1","Number","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.b045c7ce.js.map"}